最近工作项目中要做一个微信授权，还要引用微信jssdk，第一次做这个的我真的碰到了很多坑：

先说下我们的需求吧：登录进来直接授权，如果客户在平台绑定了微信，授权完成就直接登录。如果客户没有绑定，则直接账号登录。

我们的解决步骤分成几步：
    1、直接参考微信授权的第一步，拿到code。
    https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&redirect_uri=REDIRECT_URI&response_type=code&scope=SCOPE&state=STATE#wechat_redirect
    万事开头难，越来越难。开始第一步我和后端就开始争吵了，都觉得这一步是对方做。我觉得这是个链接，前端就是一个跳页面的动作，怎么可能拿到code。所以第一步就卡住了。所幸找到资料，是前端跳转，而且要提供一个跳转页面，让它能跳回来，那个页面什么dom都不需要，就是一个空白页面，用于重定向。所以我在同级目录下，新建了一个wx.vue的空白页面。链接中所以的参数都是后端提供的。后端在本地起了个natapp,我的redirect_uri参数就是用他natapp的地址，可是当我准备好后就一直报跨域的错。后来的解决办法就是再我的电脑上起个服务，让后端连上我的，这样跨域的问题就完美解决了
    2、我们的页面有个定位和上传图片的功能，这样就要用到微信的jssdk
    首先再项目里面安装 weixin-js-sdk，调用后端的接口，拿到微信config配置的参数，这里遇到了一个坑，就是后端返回的timestamp是字符，配置时一直报错，后来Number一下就好了。
    
    定位是使用的腾讯地图，我再腾讯地图上注册了一个账号，拿到了key，直接再代码里面调用腾讯的sdk，将key写上去就好了
    图片的功能就相对简单些，拿到上传图片地址后直接将地址传给后端。
    
    写到这里并没有完成，我们遇到另一个大坑，就是我们再本地和测试环境地址是http,但是到了正式环境，就变成https,所以发到正式环境不能授权。
    解决的办法是 之前我们的重定向都是后天跳转，现在我们重定向直接由前端来完成，将redirect_uri改成重定向地址就解决问题了
    
    
    这些问题看似很简单，但是我们做了至少一个礼拜才完成。主要原因是前端和后端都没做过，接触的少，碰到的坑太多，其次就是需求老是改，这个简单的需求其中改了不下3次，我得出结论：自身技能要提高，还要学会拒绝业余产品提出的无厘头需求，不然真的是浪费时间，浪费生命
    
    
